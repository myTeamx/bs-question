<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.UserLoginDao">

    <resultMap type="com.demo.entity.po.UserLogin" id="UserLoginMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="uid" column="uid" jdbcType="VARCHAR"/>
        <result property="createtime" column="createtime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="ucfbun" type="com.demo.entity.po.UserCountGroupByUName">
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="count" column="count" javaType="long" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="ulvo" type="com.demo.entity.vo.monitor.UserLoginVO">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="nickname" column="nickname" jdbcType="VARCHAR"/>
        <result property="phoneNumber" column="phone_number" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="createtime" column="createtime" jdbcType="TIMESTAMP"/>
    </resultMap>
    
    <select id="count" resultType="Long">
        select
            count(*)
        from questionnaire.user_login
        <where>
            <if test="startTime != null">
                and createtime >= #{startTime}
            </if>
            <if test="endTime != null">
                and #{endTime} > createtime
            </if>
        </where>
    </select>

    <select id="countUsers" resultType="Long">
        select
        count(distinct uid)
        from questionnaire.user_login
        <where>
            <if test="startTime != null">
                and createtime >= #{startTime}
            </if>
            <if test="endTime != null">
                and #{endTime} > createtime
            </if>
        </where>
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="UserLoginMap">
        select
          id, uid, createtime
        from questionnaire.user_login
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserLoginMap">
        select
          id, uid, createtime
        from questionnaire.user_login
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserLoginMap">
        select
          id, uid, createtime
        from questionnaire.user_login
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="uid != null and uid != ''">
                and uid = #{uid}
            </if>
            <if test="createtime != null">
                and createtime = #{createtime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into questionnaire.user_login(uid)
        values (#{uid})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update questionnaire.user_login
        <set>
            <if test="uid != null and uid != ''">
                uid = #{uid},
            </if>
            <if test="createtime != null">
                createtime = #{createtime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from questionnaire.user_login where id = #{id}
    </delete>

    <select id="countGroupByUName" resultMap="ucfbun">
        select u.username, tmp.count from
            questionnaire.user u,
            (select uid, count(*) count from
                questionnaire.user_login
             group by uid) tmp
        where u.id=tmp.uid
        order by tmp.count
    </select>

    <select id="listByPage" resultMap="ulvo">
        select u.id, u.username, u.nickname, u.phone_number, u.email, u.sex, ul.createtime from
          questionnaire.user_login ul left join questionnaire.user u
          on ul.uid=u.id
        order by ul.createtime desc
        limit #{offset}, #{size}
    </select>

</mapper>