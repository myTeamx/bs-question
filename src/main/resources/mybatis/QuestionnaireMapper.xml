<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.QuestionnaireDao">

    <resultMap type="com.demo.entity.po.Questionnaire" id="QuestionnaireMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="typeId" column="type_id" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="uid" column="uid" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="createtime" column="createtime" jdbcType="TIMESTAMP"/>
        <result property="updatetime" column="updatetime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap type="com.demo.entity.po.Question" id="QuestionMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
        <result property="typeId" column="t_id" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="createtime" column="createtime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap type="com.demo.entity.po.QuestionnaireGroupByType" id="qgbt">
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="value" column="value" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="listPage" resultMap="QuestionMap">
        SELECT
            t.id,
            u.username,
            u.id user_id,
            t.type,
            t.t_id,
            t.title,
            t.state,
            t.createtime
        FROM
            (
                SELECT
                    q.id,
                    qt.NAME type,
                    qt.id t_id,
                    q.title,
                    q.uid,
                    q.state,
                    q.createtime
                FROM
                    questionnaire.questionnaire q
                        LEFT JOIN questionnaire.question_type qt ON q.type_id = qt.id
                    <where>
                        <if test="question.id != null and question.id != ''">
                            and q.id = #{question.id}
                        </if>
                        <if test="question.typeId != null and question.typeId != ''">
                            and q.type_id = #{question.typeId}
                        </if>
                        <if test="question.title != null and question.title != ''">
                            and q.title = #{question.title}
                        </if>
                    </where>
                ORDER BY
                    q.createtime DESC
                LIMIT #{offset}, #{limit}
            ) t
                LEFT JOIN questionnaire.user u ON t.uid = u.id
    </select>

    <select id="countByTime" resultType="Long">
        SELECT
            count(*)
        FROM
        questionnaire.questionnaire q
        <where>
            <if test="startTime != null">
                and createtime >= #{startTime}
            </if>
            <if test="endTime != null">
                and #{endTime} > createtime
            </if>
        </where>
    </select>

    <select id="countGroupByType" resultMap="qgbt">
        select qt.name, tmp.count value from
          (select type_id, count(*) count from
              questionnaire.questionnaire
           group by type_id) tmp, questionnaire.question_type qt
        where tmp.type_id=qt.id
    </select>

    <select id="count" resultType="Long">
        SELECT
        count(*)
        FROM
        (
        SELECT
        q.id,
        qt.NAME type,
        qt.id t_id,
        q.title,
        q.uid,
        q.state,
        q.createtime
        FROM
        questionnaire.questionnaire q
        LEFT JOIN questionnaire.question_type qt ON q.type_id = qt.id
        <where>
            <if test="id != null and id != ''">
                and q.id = #{id}
            </if>
            <if test="typeId != null and typeId != ''">
                and q.type_id = #{typeId}
            </if>
            <if test="title != null and title != ''">
                and q.title = #{title}
            </if>
        </where>
        ) t
        LEFT JOIN questionnaire.user u ON t.uid = u.id
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="QuestionnaireMap">
        select
          id, type_id, title, uid, state, createtime, updatetime
        from questionnaire.questionnaire
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="QuestionnaireMap">
        select
          id, type_id, title, uid, state, createtime, updatetime
        from questionnaire.questionnaire
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="QuestionnaireMap">
        select
          id, type_id, title, uid, state, createtime, updatetime
        from questionnaire.questionnaire
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="typeId != null and typeId != ''">
                and type_id = #{typeId}
            </if>
            <if test="title != null and title != ''">
                and title = #{title}
            </if>
            <if test="uid != null and uid != ''">
                and uid = #{uid}
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
            <if test="createtime != null">
                and createtime = #{createtime}
            </if>
            <if test="updatetime != null">
                and updatetime = #{updatetime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert">
        insert into questionnaire.questionnaire(id, type_id, title, uid, state)
        values (#{id}, #{typeId}, #{title}, #{uid}, #{state})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update questionnaire.questionnaire
        <set>
            <if test="typeId != null and typeId != ''">
                type_id = #{typeId},
            </if>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="uid != null and uid != ''">
                uid = #{uid},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from questionnaire.questionnaire where id = #{id}
    </delete>

</mapper>